# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Ember.JS files
GET     /assets/*file                       controllers.Assets.versioned(path="/public/ember/assets", file: Asset)

# An example controller showing how to use dependency injection
GET     /api/v1/count                       controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /api/v1/message                     controllers.AsyncController.message

# Get visitor coordinates
POST        /api/v1/admin/getLocationCoordinates    controllers.RestaurantLocationController.getLocationCoordinates

# Users
POST    /api/v1/login                       controllers.UserController.login
GET     /api/v1/currentUser/:token          controllers.UserController.currentUser(token:String)
GET     /api/v1/logout/:token                      controllers.UserController.logout(token:String)
POST    /api/v1/register                    controllers.UserController.register
POST    /api/v1/getAllUsers                 controllers.UserController.getAllUsers

POST    /api/v1/getRestaurantsByFilter      controllers.RestaurantController.getRestaurantsByFilter
POST    /api/v1/getRestaurantDetails        controllers.RestaurantController.getRestaurantDetails
POST    /api/v1/getRestaurantMenu           controllers.RestaurantController.getRestaurantMenu
GET     /api/v1/getRestaurantsLocations     controllers.RestaurantController.getRestaurantsLocations
GET     /api/v1/allRestaurantsSortReservationsToday controllers.RestaurantController.getAllRestaurantsSortReservationsToday
POST     /api/v1/getAllNearestRestaurants    controllers.RestaurantController.getAllNearestRestaurants
POST    /api/v1/restaurantVote              controllers.RestaurantController.restaurantVote
POST    /api/v1/insertComment               controllers.RestaurantController.insertComment

POST    /api/v1/makeReservation             controllers.RestaurantController.makeReservation
POST    /api/v1/cancelReservation             controllers.ReservationController.cancelReservation

POST    /api/v1/checkReservationAvailability controllers.ReservationController.checkReservationAvailability
GET     /api/v1/getListOfReservationsForUser    controllers.ReservationController.getListOfReservationsForUser
POST    /api/v1/getFreeTables                   controllers.ReservationController.getFreeTables

# User reset password
POST    /api/v1/createResetPasswordToken        controllers.UserPasswordResetTokenController.createResetPasswordToken
POST    /api/v1/checkIsTokenValid               controllers.UserPasswordResetTokenController.checkIsTokenValid
POST    /api/v1/resetUserPassword               controllers.UserPasswordResetTokenController.resetUserPassword


# Administration
GET    /api/v1/admin/getAdministrationCounters      controllers.RestaurantController.getAdministrationCounters

# Categories (Administration)
GET     /api/v1/getAllCategories            controllers.RestaurantCategoriesController.getAllCategories
POST    /api/v1/admin/getFilteredCategories      controllers.RestaurantCategoriesController.getFilteredCategories
POST    /api/v1/admin/addCategory                controllers.RestaurantCategoriesController.addCategory
POST    /api/v1/admin/editCategory               controllers.RestaurantCategoriesController.editCategory
POST    /api/v1/admin/deleteCategory             controllers.RestaurantCategoriesController.deleteCategory
POST    /api/v1/admin/getCategoryDetails         controllers.RestaurantCategoriesController.getCategoryDetails

# Locations (Administration)
POST    /api/v1/admin/getFilteredLocations      controllers.RestaurantLocationController.getFilteredLocations
POST    /api/v1/admin/addLocation                controllers.RestaurantLocationController.addLocation
POST    /api/v1/admin/editLocation               controllers.RestaurantLocationController.editLocation
POST    /api/v1/admin/deleteLocation             controllers.RestaurantLocationController.deleteLocation
POST    /api/v1/admin/getLocationDetails         controllers.RestaurantLocationController.getLocationDetails

# Restaurants (Administration)
POST    /api/v1/admin/getFilteredRestaurants      controllers.RestaurantController.getFilteredRestaurants
POST    /api/v1/admin/addRestaurant                controllers.RestaurantController.addRestaurant
POST    /api/v1/admin/editRestaurant               controllers.RestaurantController.editRestaurant
POST    /api/v1/admin/deleteRestaurant             controllers.RestaurantController.deleteRestaurant
POST    /api/v1/admin/getAllRestaurantComments      controllers.RestaurantController.getAllRestaurantComments
POST    /api/v1/admin/getAllRestaurantReservations      controllers.RestaurantController.getAllRestaurantReservations
POST    /api/v1/admin/getRestaurantCategories      controllers.RestaurantController.getRestaurantCategories
POST    /api/v1/admin/uploadRestaurantLogo         controllers.RestaurantController.uploadRestaurantLogo
POST    /api/v1/admin/uploadRestaurantCover         controllers.RestaurantController.uploadRestaurantCover

# Users (Administration)
POST    /api/v1/admin/getFilteredUsers      controllers.UserController.getFilteredUsers
POST    /api/v1/admin/addUser                controllers.UserController.addUser
POST    /api/v1/admin/editUser               controllers.UserController.editUser
POST    /api/v1/admin/deleteUser             controllers.UserController.deleteUser
POST    /api/v1/admin/getUserDetails         controllers.UserController.getUserDetails

# Tables (Administration)
POST    /api/v1/admin/getAllRestaurantTables                controllers.RestaurantTablesController.getAllRestaurantTables
POST      /api/v1/admin/adminTableItems          controllers.RestaurantTablesController.adminTableItems

POST      /api/v1/admin/adminMenuItems          controllers.RestaurantMenuItemController.adminMenuItems

GET     /                                   controllers.HomeController.index(slug = "")
GET     /*slug                              controllers.HomeController.index(slug)